{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AACuD;AACK;AACmC;AACJ;AACkB;;;AAE7G,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,2BAA2B;QACjC,SAAS,EAAE,uEAAY;KACxB;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,0GAAuB;KACnC;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,wHAA2B;KACvC;IACD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM;QAC7B,SAAS,EAAE,sGAAqB;KACjC;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,EAChD,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;ACpBjB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,aAAa,CAAC;KACvB;;wEAFY,YAAY;0GAAZ,YAAY;QCCzB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPyB;AAEF;AACT;AACkD;AACS;AAC5C;AACN;AACA;AACU;AACjB;AACM;AAC8B;AACU;AACkB;;AAwBxG,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YATJ;YACP,qEAAa;YACb,wDAAW;YACX,iEAAgB;YAChB,mEAAgB;YAChB,mEAAgB;YAChB,kEAAS;YACT,gEAAmB;SACpB;mIAIU,SAAS,mBApBlB,wDAAY;QACZ,0GAAuB;QACvB,mHAA0B;QAC1B,uEAAY;QACZ,4FAAmB;QACnB,sGAAqB;QACrB,wHAA2B,aAG3B,qEAAa;QACb,wDAAW;QACX,iEAAgB;QAChB,mEAAgB;QAChB,mEAAgB;QAChB,kEAAS;QACT,gEAAmB;;;;;;;;;;;;;;;;;AC3BhB,MAAM,0BAA0B;IAErC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oGALU,0BAA0B;wHAA1B,0BAA0B;QCPvC,oEAAG;QAAA,oFAAyB;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;ACI+D;;;;;;;;;;IC6BnF,sEAAmC;IACjC,0EAA8C;IAC5C,oEAAG;IAAA,uDAAwB;IAAA,4DAAI;IACjC,4DAAM;IACR,4DAAM;;;IAFC,0DAAwB;IAAxB,iGAAwB;;;IAG/B,sEAAmC;IACjC,0EAA6C;IAC3C,uDACF;IAAA,4DAAM;IACR,4DAAM;;;IAFF,0DACF;IADE,oIACF;;;IATJ,sEAAoC;IAClC,sHAIM;IACN,sHAIM;IACR,4DAAM;;;IAVe,0DAAc;IAAd,uFAAc;IAKd,0DAAc;IAAd,uFAAc;;;IAMnC,0EAAyG;IACvG,oEAAG;IAAA,qFAA0B;IAAA,4DAAI;IACnC,4DAAM;;;IAcJ,0EAA+D;IAC7D,oEAAG;IAAA,uDAAiC;IAAA,4DAAI;IAC1C,4DAAM;;;IADD,0DAAiC;IAAjC,2GAAiC;;;IAEtC,0EAA+D;IAC7D,oEAAG;IAAA,uDAAiC;IAAA,4DAAI;IAC1C,4DAAM;;;IADD,0DAAiC;IAAjC,2GAAiC;;;IALxC,sEAAgD;IAC9C,6HAEM;IACN,6HAEM;IACR,4DAAM;;;IAN2C,0DAAc;IAAd,8EAAc;IAGf,0DAAe;IAAf,+EAAe;;;;IAdnE,yEAA2E;IACzE,yEAAiB;IACf,oEAAG;IAAA,uDAA8F;IAAA,4DAAI;IACrG,gFACiB;IACjB,gEAAK;IACL,6EAA0E;IAA7C,4WAAS,6CAAkC,IAAC;IAAC,oFAAoB;IAAA,4DAAS;IAAA,wEACvG;IAAA,6EAAiE;IAAjC,4WAAS,iCAAsB,IAAC;IAAC,oEAAQ;IAAA,4DAAS;IAClF,iEAAK;IACL,iEAAK;IACL,wHAOM;IACR,4DAAM;IACR,4DAAM;;;;IAjBC,0DAA8F;IAA9F,wNAA8F;IACjF,0DAA+B;IAA/B,2FAA+B;IAO5B,0DAA2B;IAA3B,gGAA2B;;;;IAzDpD,sEAA6C;IAE3C,yEAAuB;IACrB,wEAAsB;IAAA,uDAAkC;IAAA,4DAAK;IAC7D,uEAAgB;IAAA,uDAAgC;IAAA,4DAAI;IACpD,uEAAgB;IAAC,uDAAyC;IAAA,4DAAI;IAC9D,mEAAiB;IACnB,4DAAM;IAEN,yEAAiB;IACf,0EAAiB;IAEf,qFAM6D;IAD7C,yTAAgB,+BAAuB,IAAC,qQACtB,iCAAyB,IADH;IAExD,4DAAiB;IACjB,iEAAK;IACL,6EAA8F;IAA1B,6RAAS,iBAAS,KAAK,CAAC,IAAC;IAAC,kFACrF;IAAA,2EAAgC;IAAA,wDAA2C;IAAA,4DAAO;IAAA,4DAAS;IAAA,yEACpG;IAAA,6EAA6F;IAAzB,6RAAS,iBAAS,IAAI,CAAC,IAAC;IAAC,8FAC1E;IAAA,2EAAgC;IAAA,wDAA2C;IAAA,4DAAO;IAAA,4DAAS;IAAA,yEAC9G;IAAA,8EAAoE;IAAvC,6RAAS,4CAA4B,IAAC;IAAC,qFAAoB;IAAA,4DAAS;IAAA,yEACjG;IAAA,8EAA2D;IAA3B,6RAAS,gCAAgB,IAAC;IAAC,oEAAQ;IAAA,4DAAS;IAAA,yEAC5E;IAAA,8EAAsF;IAAnB,6RAAS,gBAAQ,IAAC;IAAC,wDAAsD;IAAA,4DAAS;IACrJ,iEAAK;IACL,iEAAK;IACL,gHAWM;IACN,iHAEM;IACR,4DAAM;IACR,4DAAM;IACN,kHAmBM;IACR,4DAAM;;;IAhEoB,0DAAkC;IAAlC,sGAAkC;IACxC,0DAAgC;IAAhC,kHAAgC;IAC/B,0DAAyC;IAAzC,uHAAyC;IAOxC,0DAAyB;IAAzB,yFAAyB;IAST,0DAAmC;IAAnC,mGAAmC;IAC1B,0DAA2C;IAA3C,+GAA2C;IACpD,0DAAmC;IAAnC,mGAAmC;IAChB,0DAA2C;IAA3C,+GAA2C;IAG9D,0DAAkC;IAAlC,kGAAkC;IAAoB,0DAAsD;IAAtD,yHAAsD;IAGtI,0DAA4B;IAA5B,+FAA4B;IAY5B,0DAAwD;IAAxD,kIAAwD;IAKnB,0DAAyB;IAAzB,kGAAyB;;ADpCvE,MAAM,YAAY;IAWvB,YAAoB,eAAgC,EAChC,cAA8B,EAC9B,KAAqB;QAFrB,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QATlC,gBAAW,GAAuB,EAAE,CAAC;QACrC,gBAAW,GAAU,EAAE,CAAC;QAG/B,gBAAW,GAAG,kHAAkH,CAAC;IAKpF,CAAC;IAG9C,QAAQ;QACN,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1D,IAAG,EAAE,IAAI,MAAM,EAAE;YACf,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACjE,IAAG,CAAC,QAAQ,EAAE;oBACZ,KAAK,CAAC,qCAAqC,CAAC,CAAC;oBAC7C,OAAO;iBACR;gBAED,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;gBACjC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAE,GAAG,CAAC,EAAE;oBAC7C,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE;wBACzC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;wBACvB,IAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE;4BAChC,IAAI,UAAU,GAAG,IAAI,CAAC;4BACtB,GAAG;gCACD,UAAU,GAAG,MAAM,CAAC,2BAA2B,CAAC,CAAC;6BAClD,QAAO,CAAC,UAAU,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC;4BAC1C,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAE,OAAO,CAAC,EAAE;gCAC5E,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;4BACvB,CAAC,CAAC;yBACH;qBACF;gBACL,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,MAAM,wBAAwB,CAAC;SAChC;IACH,CAAC;IAED,QAAQ,CAAC,SAAkB;QACzB,IAAG,CAAC,SAAS,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YAEtB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACnD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YAChF,CAAC,CAAC,CAAC;SAEJ;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,OAAO,CAAE,GAAG,CAAC,EAAE;gBACzF,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;gBAChB,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAE,IAAI,CAAC,EAAE;oBAEvC,IAAI,MAAM,GAAU,EAAE,EAAE,MAAM,GAAU,EAAE,CAAC;oBAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;oBAC7C,IAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;wBACpB,IAAI,IAAI,GAAmB;4BACzB,QAAQ,EAAE,IAAI;4BACd,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;4BACvB,MAAM,EAAE,KAAK;yBACd,CAAC;wBACF,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACvB;oBACD,IAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;wBACpB,IAAI,IAAI,GAAmB;4BACzB,QAAQ,EAAE,IAAI;4BACd,MAAM,EAAE,EAAE;4BACV,MAAM,EAAE,IAAI;yBACb,CAAC;wBACF,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACvB;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAEO,UAAU;QAChB,IAAI,WAAW,GAAQ,EAAE,EAAE,WAAW,GAAQ,EAAE,CAAC;QACjD,KAAI,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,EAAE;YAClD,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;SACrE;QAED,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,CAAC;QAC7B,WAAW,CAAC,OAAO,CAAE,CAAC,CAA0C,EAAE,EAAE;YAClE,MAAM,UAAU,GAAmB;gBAC/B,MAAM,EAAE,CAAC,CAAC,KAAK;gBACf,MAAM,EAAE,KAAK;gBACb,QAAQ,EAAE,CAAC,CAAC,IAAI;aACnB,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,WAAW,CAAC,OAAO,CAAE,CAAC,CAAkB,EAAE,EAAE;YAC1C,MAAM,UAAU,GAAmB;gBACjC,MAAM,EAAE,EAAE;gBACV,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,CAAC;aACZ,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC,MAAM,CAAC;IAC5B,CAAC;IAEO,OAAO,CAAC,IAAsB,EAAE,IAAU,EAAE,WAAkB,EAAE,WAAkB;QACxF,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC1B,KAAK,gFAAuB;gBAC1B,IAAI;oBACF,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;oBAC1E,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACxB;gBAAC,OAAO,CAAM,EAAE;oBACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAClB,WAAW,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;iBAC1C;gBACD,MAAM;YACR;gBACE,KAAK,CAAC,0BAA0B,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC1D;QAED,OAAO,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,CAAE,CAAC,CAAc,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACpG,CAAC;IAED,+BAA+B;IAC/B,6DAA6D;IAC7D,2CAA2C;IAC3C,yBAAyB;IACzB,wBAAwB;IACxB,6EAA6E;IAC7E,cAAc;IACd,MAAM;IACN,IAAI;IACJ,EAAE;IACF,qCAAqC;IACrC,6DAA6D;IAC7D,2CAA2C;IAC3C,0BAA0B;IAC1B,6CAA6C;IAC7C,+DAA+D;IAC/D,eAAe;IACf,MAAM;IACN,IAAI;IAEJ,4FAA4F;IAC5F,eAAe;IACf,sEAAsE;IACtE,mDAAmD;IACnD,6EAA6E;IAC7E,6EAA6E;IAC7E,EAAE;IACF,oDAAoD;IACpD,EAAE;IACF,sGAAsG;IACtG,qHAAqH;IACrH,mFAAmF;IACnF,sBAAsB;IACtB,4CAA4C;IAC5C,sDAAsD;IACtD,gIAAgI;IAChI,UAAU;IACV,gEAAgE;IAChE,QAAQ;IACR,WAAW;IACX,QAAQ;IACR,IAAI;IAEJ,GAAG,CAAC,WAAwB;QAC1B,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhB,MAAM,WAAW,GAAG,KAAK;YACzB,2CAA2C;YAC3C,kCAAkC;YAClC,kDAAkD;YAClD,KAAK,CAAC;QAEN,MAAM,cAAc,GAAG,oBAAoB,CAAC;QAE5C,MAAM,QAAQ,GAAG,WAAW,GAAG,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,cAAc,GAAE,GAAG,CAAC;QACpF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEf,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC;IAC9B,CAAC;IAED,UAAU,CAAC,IAAU;QACjB,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QAC7B,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;QACzB,MAAM,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QAC3C,IAAG,WAAW,EAAE;YACd,MAAM,OAAO,GAAY;gBACrB,EAAE,EAAE,SAAS;gBACb,OAAO,EAAE,WAAW;gBACpB,IAAI,EAAE,IAAI,IAAI,EAAE;gBAChB,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM;gBAC/B,OAAO,EAAE,EAAE;aACd,CAAC;YAEF,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE;gBAChG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACxC,CAAC,CAAC,CAAC;SACJ;IACL,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;IACjC,CAAC;IAED,eAAe,CAAC,IAAU;QACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACzC,CAAC;IAED,iBAAiB,CAAC,MAAW;QAC3B,sCAAsC;IACxC,CAAC;IAED,MAAM;QACJ,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,gBAAgB,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACzC,IAAG,gBAAgB,GAAG,CAAC,EAAE;YACvB,UAAU,GAAG,OAAO,CAAC,WAAW,gBAAgB,8DAA8D,CAAC,CAAC;SACjH;QACD,IAAG,UAAU,EAAE;YACb,IAAG,OAAO,CAAC,iLAAiL,CAAC,EAAE;gBAC7L,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;oBAC7D,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;gBACzB,CAAC,CAAC,CAAC;aACJ;SACF;IACH,CAAC;;wEAlPU,YAAY;0GAAZ,YAAY;;;;;;;;QCbzB,yEAAiB;QACf,yEAAiB;QACf,0GAmEM;QACR,4DAAM;QACR,4DAAM;;QArEI,0DAAqC;QAArC,yGAAqC;;;;;;;;;;;;;;;;;;;;;;ACFkE;;;;;;;;;;;IC0BvG,wEAC+E;IAA3E,qWAAa,8BAAoB,IAAC,2SAAa,oCAA0B,IAAvC;IACpC,0EAA+B;IAAA,uDAAS;IAAA,4DAAO;IAAA,uEAAY;IAAA,oEAAG;IAAA,uDAAkB;IAAA,4DAAI;IAAC,2EAC3D;IAAA,uDAA4B;;IAAA,4DAAO;IAAA,uDAC/D;IAAA,4DAAK;;;IAF4B,0DAAS;IAAT,yEAAS;IAAsB,0DAAkB;IAAlB,kFAAkB;IACtD,0DAA4B;IAA5B,gKAA4B;IAAO,0DAC/D;IAD+D,0FAC/D;;;;IATJ,wEACyF;IAArF,oWAAa,mCAAyB,IAAC,2SAAa,0CAA+B,IAA5C;IACzC,0EAA+B;IAAA,uDAAc;IAAA,4DAAO;IAAA,uEAAY;IAAA,oEAAG;IAAA,uDAAuB;IAAA,4DAAI;IAAC,2EACrE;IAAA,uDAAiC;;IAAA,4DAAO;IAAA,uDAAsB;IAAA,8EAAyD;IAAzB,kWAAS,yBAAc,IAAC;IAAC,iEAAK;IAAA,4DAAS;IAC/J,0EAAiD;IAC/C,sHAIK;IACP,4DAAK;IACP,4DAAK;;;IAT4B,0DAAc;IAAd,8EAAc;IAAsB,0DAAuB;IAAvB,uFAAuB;IAChE,0DAAiC;IAAjC,qKAAiC;IAAO,0DAAsB;IAAtB,+FAAsB;IAE3C,0DAAkB;IAAlB,uFAAkB;;;ADdhE,MAAM,mBAAmB;IAsB9B,YAAoB,WAAwB,EAAU,eAAgC;QAAlE,gBAAW,GAAX,WAAW,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAnBtF,gBAAW,GAAe,EAAE,CAAC;QAS7B,aAAQ,GAAY,KAAK,CAAC;QAE1B,iBAAY,GAAG,IAAI,uDAAY,EAAE,CAAC;QAElC,mBAAc,GAAG,IAAI,uDAAY,EAAE,CAAC;IAMsD,CAAC;IAE3F,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,EAAI,GAAG,CAAC,CAAC;QAC9C,IAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;YACzB,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,CAAC;SAC9C;IACH,CAAC;IAED,aAAa,CAAC,EAAW;QACvB,IAAI,OAAO,GAAI,QAAQ,CAAC,cAAc,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC;QACxD,IAAG,OAAO,IAAI,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,EAAE;YAClM,UAAU,CAAC,GAAG,EAAE;gBACd,IAAG,OAAO,IAAI,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,EAAE;oBAClM,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,cAAc,GAAG,sBAAsB,CAAC;iBAC/G;YACH,CAAC,EAAE,EAAE,CAAC,CAAC;SACR;IACH,CAAC;IAED,mBAAmB,CAAC,EAAW;QAC7B,IAAI,OAAO,GAAI,QAAQ,CAAC,cAAc,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC;QACxD,IAAG,OAAO,IAAI,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,EAAE;YAClM,UAAU,CAAE,GAAG,EAAE;gBACf,IAAG,OAAO,IAAI,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa;oBAChM,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC;YAClG,CAAC,EAAE,GAAG,CAAC,CAAC;SACT;IACH,CAAC;IAED,WAAW;QACT,UAAU,CAAE,GAAG,EAAE;YACf,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBACjD,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;gBACd,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE;YACvD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;;QACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,UAAI,CAAC,mBAAmB,CAAC,UAAU,0CAAE,QAAQ,CAAC,CAAC,IAAgB,EAAE,EAAE;;YAEjE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEvB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;gBAC1C,IAAI,EAAE,GAAa,EAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC,CAAC;gBACpE,IAAI,EAAE,GAAa,EAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC,CAAC;gBAEtE,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBAE3C,IAAI,IAAI,GAAQ,EAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC;gBAC5F,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;gBAC5G,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;gBACpC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,SAAS,CAAC,CAAC;gBAC9D,IAAI,OAAO,EAAE;oBACX,GAAG,CAAC,EAAE,GAAG,UAAU,GAAG,OAAO,CAAC,EAAE,CAAC;oBACjC,GAAG,CAAC,SAAS,GAAG,0BAA0B,CAAC;oBAC3C,GAAG,CAAC,SAAS,GAAG,kCAAkC,GAAG,OAAO,CAAC,EAAE,GAAG,wBAAwB,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;oBACtH,GAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;wBACjC,KAAK,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;oBAC1C,CAAC,CAAC,CAAC;iBACJ;gBACD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,UAAI,CAAC,mBAAmB,CAAC,UAAU,0CAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;aAC7D;YACD,CAAC,EAAE,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,OAAgB;QAClB,MAAM,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QAC3C,IAAG,WAAW,EAAE;YACd,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAE,CAAC,CAAC,EAAE;gBACrF,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;SACJ;IACL,CAAC;;sFA5GU,mBAAmB;iHAAnB,mBAAmB;;;;;;;;QCZhC,yEAAiB;QACf,4EAA6B;QAC3B,uFAUC;QARC,mKAAiB,iBAAa,IAAC;QAQhC,4DAAiB;QACpB,4DAAM;QACN,yEAAiB;QACf,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,yEAAqI;QACrI,mEACA;QAAA,4DAAM;QACN,sEAAI;QAAA,4EAAW;QAAA,4DAAK;QACpB,yEAAuB;QACrB,gHAWK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;;QA9BA,0DAAuB;QAAvB,kFAAuB;QAWpB,0DAAoB;QAApB,+IAAoB;QAKyB,0DAAc;QAAd,oFAAc;;;;;;;;;;;;;;;;;;;;;;;;ACb1B;AACC;;;;;;;;;ICSnC,qEAAmC;IACjC,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,sFACF;;;IAJJ,0EAA8C;IAC5C,qEAAI;IACF,yHAEK;IACP,4DAAK;IAEP,4DAAM;;;IALgB,0DAAc;IAAd,uFAAc;;;IAOlC,0EAAmC;IACjC,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,0EAAwB;IACtB,wEAAO;IAAA,4EAAiB;IAAA,4DAAQ;IAChC,uEAAwH;IACxH,4EAAoC;IAAA,iHAA4C;IAAA,4DAAQ;IAC1F,4DAAM;IACN,0EAAwB;IACtB,yEAAO;IAAA,+EAAS;IAAA,4DAAQ;IACxB,gFAA0F;IAE5F;IAAA,4DAAW;IACT,6EAAoC;IAAA,sKACP;IAAA,4DAAQ;IACvC,4DAAM;IAER,4DAAM;;;IAZK,0DAAoB;IAApB,oFAAoB;IAKjB,0DAA2B;IAA3B,2FAA2B;;;;;;IAgBvC,sEAAwC;IAEtC,yEAAiB;IACf,6EAA6B;IAC3B,yFAUC;IARC,uUAAiB,qBAAa,IAAC;IAQhC,4DAAiB;IACpB,4DAAM;IACR,4DAAM;IAEN,oEAAyB;IAE3B,4DAAM;;;IAbE,0DAAgC;IAAhC,0FAAgC;;;;IAb1C,0EAAmC;IACjC,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,6EAAmE;IAAxB,wSAAS,qBAAa,IAAC;IAAC,wFAAmB;IAAA,4DAAS;IAC/F,oEAAyB;IACzB,oEAAyB;IAEzB,2HAoBM;IACR,4DAAM;;;IArBsB,0DAAY;IAAZ,qFAAY;;;IA4BhC,6EAAgF;IAAA,uDAAiB;IAAA,4DAAS;;;;IAA/C,iFAAoB;IAAC,0DAAiB;IAAjB,qGAAiB;;;IAwB3F,0EAA8F;IAC5F,mEACF;IAAA,4DAAM;;;IAEN,0EACmC;IACjC,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,oGACF;;;;IAzBR,yEAAgG;IAC9F,yEAAiB;IACf,qEAAI;IAAA,uDAAgC;IAAA,4DAAK;IACzC,yEAAiB;IACf,8EAA+B;IAC7B,yFASe;IAPb,wUAAiB,qBAAa,IAAC;IAOlB,4DAAiB;IAChC,gEAAK;IACL,8EAA2D;IAAzB,6WAAS,0BAAc,IAAC;IAAC,mEAAO;IAAA,4DAAS;IAC3E,iEAAK;IAAA,iEAAK;IACV,oIAEM;IAEN,oIAGM;IACR,4DAAM;IACN,2EAAmB;IACjB,iEAAK;IACL,2EAAwB;IACtB,6EAAgC;IAAA,uFAAiB;IAAA,4DAAQ;IACzD,6EAC6C;IADE,6UAAwB;IAAvE,4DAC6C;IAC7C,qEAAG;IAAA,wDAAe;IAAA,4DAAI;IACxB,4DAAM;IACN,2EAAmC;IACjC,6EAC6C;IADG,mVAA8B;IAA9E,4DAC6C;IAC7C,6EAAgC;IAAA,+FAA8B;IAAA,4DAAQ;IACxE,4DAAM;IACR,4DAAM;IACR,4DAAM;IAER,4DAAM;IACR,4DAAM;;;;IA1CE,0DAAgC;IAAhC,oHAAgC;IAM9B,0DAA4B;IAA5B,uFAA4B;IAUoC,0DAA0B;IAA1B,0FAA0B;IAKtF,0DAA2B;IAA3B,2FAA2B;IAQgB,0DAAwB;IAAxB,mFAAwB;IAEpE,0DAAe;IAAf,yFAAe;IAG8B,0DAA8B;IAA9B,yFAA8B;;;IA4BhF,0EAA8F;IAC5F,mEACF;IAAA,4DAAM;;;IAEN,0EACmC;IACjC,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,oGACF;;;;IAzBR,yEAA2E;IACzE,yEAAiB;IACf,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,yEAAiB;IACf,8EAA+B;IAC7B,yFASe;IAPb,wUAAiB,qBAAa,IAAC;IAOlB,4DAAiB;IAChC,gEAAK;IACL,8EAAqE;IAAnC,6WAAS,oCAAwB,IAAC;IAAC,mEAAO;IAAA,4DAAS;IACrF,iEAAK;IAAA,iEAAK;IACV,oIAEM;IAEN,oIAGM;IACR,4DAAM;IACN,2EAAmB;IACjB,iEAAK;IACL,2EAAwB;IACtB,6EAAgC;IAAA,uFAAiB;IAAA,4DAAQ;IACzD,6EAC6C;IADE,6UAAwB;IAAvE,4DAC6C;IAC7C,qEAAG;IAAA,wDAAe;IAAA,4DAAI;IACxB,4DAAM;IACN,2EAAmC;IACjC,6EAC6C;IADG,mVAA8B;IAA9E,4DAC6C;IAC7C,6EAAgC;IAAA,+FAA8B;IAAA,4DAAQ;IACxE,4DAAM;IACR,4DAAM;IACR,4DAAM;IAER,4DAAM;IACR,4DAAM;;;;IA1CE,0DAAwB;IAAxB,kGAAwB;IAMtB,0DAA4B;IAA5B,uFAA4B;IAUoC,0DAA0B;IAA1B,0FAA0B;IAKtF,0DAA2B;IAA3B,2FAA2B;IAQgB,0DAAwB;IAAxB,mFAAwB;IAEpE,0DAAe;IAAf,yFAAe;IAG8B,0DAA8B;IAA9B,yFAA8B;;;;IA7F9F,0EAAmC;IACjC,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,yEAAiB;IACf,yEAAiB;IACf,6EAA8D;IAC5D,iIAA0G;IAC5G,4DAAS;IACT,gEAAK;IACL,6EAAuE;IAA5B,wSAAS,yBAAiB,IAAC;IAAC,4FAA4B;IAAA,4DAAS;IAAA,0EACxH;IACY,iEAAK;IAAC,iEAAK;IACX,+HA4CM;IAEN,+HA4CM;IAER,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IArG6B,0DAAgC;IAAhC,gGAAgC;IAC9B,0DAAc;IAAd,qFAAc;IAMX,0DAA4C;IAA5C,8GAA4C;IA8C5C,0DAAuB;IAAvB,yFAAuB;;;;IA+DzD,0EAA0B;IACxB,yEAA+C;IAAA,yEAAc;IAAA,4DAAK;IAClE,6EAA8F;IAAvC,qSAAS,kBAAc,aAAa,CAAC,IAAC;IAC3F,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IACzC,4DAAS;IACX,4DAAM;IACN,0EAAwB;IACtB,uEAAM;IACJ,0EAAwB;IACtB,4EAAkB;IAAA,mFAAkB;IAAA,4DAAQ;IAC5C,wEACwC;IAC1C,4DAAM;IACN,2EAAwB;IACtB,6EAAiB;IAAA,gEAAI;IAAA,4DAAQ;IAC7B,wEAAyF;IAC3F,4DAAM;IACR,4DAAO;IACT,4DAAM;IACN,2EAA0B;IACxB,8EAAuF;IAApC,sSAAS,gBAAY,YAAY,CAAC,IAAC;IAAC,gEAAI;IAAA,4DAAS;IACtG,4DAAM;;;IAXsC,2DAAsB;IAAtB,uFAAsB;IAKvB,0DAAqB;IAArB,sFAAqB;;;;IAmBhE,qEAA+D;IAC7D,yEAAgB;IAAA,uDAAS;IAAA,4DAAK;IAC9B,qEAAI;IACF,uDACF;IAAA,4DAAK;IACL,qEAAI;IAAA,wEAAoB;IAAA,uDAAW;IAAA,4DAAI;IAAA,4DAAK;IAC5C,qEAAI;IACF,6EAAoE;IAApC,ofAAS,kCAAyB,IAAC;IAAC,kEAAM;IAAA,4DAAS;IACnF,+EAAkB;IAAA,8EAA+B;IAAA,oEAAQ;IAAA,4DAAS;IACpE,4DAAK;IACP,4DAAK;;;;IATa,0DAAS;IAAT,0EAAS;IAEvB,0DACF;IADE,wFACF;IACO,0DAAgB;IAAhB,0IAAgB;IAAC,0DAAW;IAAX,4EAAW;;;;IApD3C,0EAA+C;IAE7C,yEAAiB;IACf,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,gEAAK;IACL,gEAAK;IACL,6EAAqF;IAA1C,oXAAS,0BAAqB,SAAS,CAAC,IAAC;IAAC,wGAErF;IAAA,4DAAS;IACT,gEAAK;IACL,gEAAK;IAEL,0NAuBc;IAEd,6EAAmC;IACjC,yEAAO;IACP,sEAAI;IACF,0EAAgB;IAAA,6DAAC;IAAA,4DAAK;IACtB,0EAAgB;IAAA,gEAAI;IAAA,4DAAK;IACzB,0EAAgB;IAAA,+DAAG;IAAA,4DAAK;IACxB,0EAAgB;IAAA,kEAAM;IAAA,4DAAK;IAC7B,4DAAK;IACL,4DAAQ;IACR,yEAAO;IACP,4HAUK;IACL,4DAAQ;IACV,4DAAQ;IACV,4DAAM;IACR,4DAAM;;;IAdoB,2DAA+B;IAA/B,sGAA+B;;ADjNxD,MAAM,uBAAuB;IAgBlC,YAAoB,eAAgC,EAAU,YAAsB,EAAU,KAAqB;QAA/F,oBAAe,GAAf,eAAe,CAAiB;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAAU,UAAK,GAAL,KAAK,CAAgB;QAbnH,SAAI,GAAG,IAAI,uDAAW,CAAC,EAAE,CAAC,CAAC;QAC3B,gBAAW,GAAG,IAAI,uDAAW,CAAC,EAAE,CAAC,CAAC;QAClC,cAAS,GAAe,EAAE,CAAC;QAC3B,OAAE,GAAG,CAAC,CAAC;QACP,SAAI,GAAG,CAAC,CAAC;QACT,qBAAgB,GAAG,IAAI,uDAAW,CAAC,EAAE,CAAC,CAAC;QACvC,+BAA0B,GAA6B,EAAE,CAAC;QAC1D,kBAAa,GAAuB,EAAE,CAAC;QACvC,WAAM,GAAG,IAAI,uDAAW,CAAC,EAAE,CAAC,CAAC;QAC7B,UAAK,GAAG,IAAI,uDAAW,CAAC,EAAE,CAAC,CAAC;QAC5B,UAAK,GAAQ,IAAI,CAAC;QAClB,gBAAW,GAAG,kHAAkH,CAAC;IAGjI,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACnD,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAClE,CAAC;IAEO,WAAW;QAEjB,IAAI,CAAC,QAAQ,GAAG;YACZ,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;YACrB,oBAAoB,EAAE,IAAI,CAAC,aAAa;YACxC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YACnC,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,0BAA0B,EAAE,IAAI,CAAC,0BAA0B;SAC9D;QAED,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEO,WAAW;QACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACrD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,QAAQ,CAAC,0BAA0B,CAAC;IAC7E,CAAC;IAED,WAAW;QAET,MAAM,QAAQ,GAAa;YACzB,WAAW,EAAE,EAAE;YACf,IAAI,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,QAAQ,EAAE,gFAAuB,EAAC;SACrE,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAED,WAAW;IAEX,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAC/C,CAAC;IAED,YAAY;QACV,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,eAAe;QACb,MAAM,IAAI,GAAqB;YAC7B,IAAI,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,gFAAuB,EAAE,WAAW,EAAE,EAAE,EAAC;YACpE,cAAc,EAAE,EAAE;YAClB,KAAK,EAAE,CAAC;YACR,WAAW,EAAE,KAAK;YAClB,MAAM,EAAE,SAAS;YACjB,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,KAAK;SACd,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,WAAW,EAAE;YAC5C,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;SAC9C;QAED,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,aAAa;QACX,MAAM,IAAI,GAAqB;YAC7B,EAAE,EAAE,SAAS;YACb,IAAI,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,gFAAuB,EAAE,WAAW,EAAE,EAAE,EAAC;YACpE,cAAc,EAAE,EAAE;YAClB,KAAK,EAAE,CAAC;YACR,WAAW,EAAE,KAAK;YAClB,MAAM,EAAE,SAAS;YACjB,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,IAAI;SACb,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,QAAQ,CAAC,IAAsB;QAC7B,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,mCAAmC,CAAC,CAAC,CAAC,EAAE,CAAC;QAClF,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,uEAAuE,CAAC,CAAC,GAAE,CAAC;QAC/G,IAAI;YACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,WAAW,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;YACpI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;QAAC,OAAO,CAAM,EAAE;YACf,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC7B;IACH,CAAC;IAED,kBAAkB,CAAC,IAAsB;QACvC,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;QACvF,IAAI;YACF,IAAI,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,WAAW,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;YACtE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;QAAC,OAAO,CAAM,EAAE;YACf,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC7B;IACH,CAAC;IAED,WAAW,CAAC,OAAY,EAAE,OAAgC;QAExD,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SAClC;QAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAE5F,MAAM,GAAG,GAA2B;gBAClC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;gBACpC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK;gBACvB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;aACtB,CAAC;YAEF,IAAI,CAAC,OAAO,EAAE;gBACZ,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC3C;YAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAE1B,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,WAAW,EAAE;YAC3C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SACrD;QACD,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAChC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,cAAc;QAEZ,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEjD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAE,QAAQ,CAAC,EAAE;YACjE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,KAAK,GAAG,KAAK,IAAK,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAClF,CAAC,CAAC,CAAC;IACL,CAAC;;8FApLU,uBAAuB;qHAAvB,uBAAuB;QClBpC,yEAAiB;QACf,yEAAiB;QAGf,yEAAuB;QACrB,wEAAsB;QAAA,wGAAmC;QAAA,4DAAK;QAC9D,uEAAgB;QAAA,oEAAI;QAAA,4DAAI;QACxB,uEAAgB;QAAA,8FAAyB;QAAA,4DAAI;QAC7C,mEAAiB;QACjB,qEAAG;QAAA,iHAAqD;QAAA,4DAAI;QAC9D,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EAAiB;QACf,0EAAiB;QACf,qHAOM;QACN,wEAAM;QACJ,sHAgBM;QAGN,qHA2BM;QAEN,sHAyGM;QAEN,uHA6DM;QAEN,iEAAK;QAAA,iEAAK;QAAA,iEAAK;QACf,8EAA8F;QAAzB,gJAAS,kBAAc,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QAAA,yEAC/G;QAAA,8EAA0F;QAArB,gJAAS,cAAU,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QAAA,yEAC3G;QAAA,8EAAyE;QAA3B,gJAAS,oBAAgB,IAAC;QAAC,mEAAO;QAAA,4DAAS;QACzF,iEAAK;QAAA,iEAAK;QAAA,iEAAK;QACjB,4DAAO;QACT,4DAAM;QACR,4DAAM;;QA1O+B,2DAAW;QAAX,2EAAW;QASzB,0DAAgB;QAAhB,gFAAgB;QAmBhB,0DAAgB;QAAhB,gFAAgB;QA6BhB,0DAAgB;QAAhB,gFAAgB;QA2GhB,0DAAgB;QAAhB,gFAAgB;QAgEa,0DAAsB;QAAtB,mFAAsB;QACtB,0DAAsB;QAAtB,mFAAsB;;;;;;;;;;;;;;;;;;AC9OnE,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FALU,qBAAqB;mHAArB,qBAAqB;QCPlC,oEAAG;QAAA,0EAAe;QAAA,4DAAI;;;;;;;;;;;;;;;;;;ACOf,MAAM,2BAA2B;IAEtC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,IAAI;QACF,MAAM,CAAC,GAAO,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;;sGAVU,2BAA2B;yHAA3B,2BAA2B;QCPxC,uEAAgF;QAChF,4EAAiD;QAAjB,mJAAS,UAAM,IAAC;QAAC,+DAAI;QAAA,4DAAS;;;;;;;;;;;;;;;;ACc9D,IAAY,YAEX;AAFD,WAAY,YAAY;IACtB,0CAAiB,YAAY;IAAG,oCAAY,MAAM;AACpD,CAAC,EAFW,YAAY,KAAZ,YAAY,QAEvB;;;;;;;;;;;;;;;;;;ACZ0D;;;AAKpD,MAAM,eAAe;IAE1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,mBAAmB,CAAC,EAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,uEAAgB,eAAe,EAAE,EAAE,CACvC,CAAC;IACJ,CAAC;IAEA,cAAc,CAAC,EAAU,EAAE,MAAc;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,uEAAgB,eAAe,EAAE,IAAI,MAAM,EAAE,CACjD,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,QAAkB;QAC7B,MAAM,CAAC,GAAO,MAAM,CAAC;QACrB,CAAC,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC/B,CAAC,CAAC,oBAAoB,GAAG,QAAQ,CAAC,oBAAoB,CAAC;QACvD,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;QACrC,CAAC,CAAC,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAChC,CAAC,CAAC,0BAA0B,GAAG,QAAQ,CAAC,0BAA0B,CAAC;IACrE,CAAC;IAGD,WAAW;QACT,MAAM,CAAC,GAAO,MAAM,CAAC;QACrB,MAAM,QAAQ,GAAa;YACzB,IAAI,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI;YAC5C,oBAAoB,EAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE;YAC1E,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI;YACjD,QAAQ,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACxC,0BAA0B,EAAE,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC,EAAE;SAC7F;QACF,OAAO,QAAQ,CAAC;IACjB,CAAC;IAED,QAAQ,CAAC,QAAkB;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,uEAAgB,2BAA2B,EAC9C,QAAQ,CACT,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,IAAU,EAAE,OAAgB,EAAE,IAAY,EAAE,MAAc;QACnE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,uEAAgB,gBAAgB,IAAI,CAAC,EAAE,SAAS,MAAM,YAAY,IAAI,EAAE,EAC3E,OAAO,CACR,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,OAAgB,EAAE,WAAmB,EAAE,WAAoB;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,uEAAgB,mBAAmB,OAAO,CAAC,EAAE,SAAS,WAAW,CAAC,EAAE,QAAQ,EAC/E,EAAC,OAAO,EAAE,WAAW,EAAC,CACvB,CAAC;IAEJ,CAAC;IAED,MAAM,CAAC,WAAwB;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,uEAAgB,4BAA4B,EAC/C,WAAW,CACZ,CAAC;IACJ,CAAC;;8EAlEU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;ACLuC;;;AAKpD,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,QAAQ,CAAC,IAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,uEAAgB,eAAe,EAClC,IAAI,CACL,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,EAAW;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,gCAAgC,EAAE,EAAE,CACrC,CAAC;IACJ,CAAC;;sEAhBU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;ACHuC;;;AAKpD,MAAM,cAAc;IAEzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,WAAW,CAAC,OAAgB;QAC1B,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,uEAAgB,eAAe,EAClC,OAAO,CACR,CAAC;IACJ,CAAC;;4EAXU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;ACNpB,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,IAAI,EAAE,kBAAkB;CACzB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;AChBvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/analytics-activity/analytics-activity.component.ts","./src/app/components/analytics-activity/analytics-activity.component.html","./src/app/components/cea/cea.component.ts","./src/app/components/cea/cea.component.html","./src/app/components/codeeditor/codeeditor.component.ts","./src/app/components/codeeditor/codeeditor.component.html","./src/app/components/config-activity/config-activity.component.ts","./src/app/components/config-activity/config-activity.component.html","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/components/test-config-activity/test-config-activity.component.ts","./src/app/components/test-config-activity/test-config-activity.component.html","./src/app/models/evaluation-activity.ts","./src/app/services/activity.service.ts","./src/app/services/code.service.ts","./src/app/services/end-user.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {CeaComponent} from \"./components/cea/cea.component\";\nimport {ConfigActivityComponent} from \"./components/config-activity/config-activity.component\";\nimport {PageNotFoundComponent} from \"./components/page-not-found/page-not-found.component\";\nimport {TestConfigActivityComponent} from \"./components/test-config-activity/test-config-activity.component\";\n\nconst routes: Routes = [\n  {\n    path: 'activity/:id/user/:userId',\n    component: CeaComponent\n  },\n  {\n    path: 'config.html',\n    component: ConfigActivityComponent\n  },\n  {\n    path: 'test/config.html',\n    component: TestConfigActivityComponent\n  },\n  { path: '**', pathMatch: 'full',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontoffice';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {ConfigActivityComponent} from './components/config-activity/config-activity.component';\nimport {AnalyticsActivityComponent} from './components/analytics-activity/analytics-activity.component';\nimport {CeaComponent} from './components/cea/cea.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CodemirrorModule} from '@ctrl/ngx-codemirror';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport 'codemirror/mode/javascript/javascript';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { CodeeditorComponent } from './components/codeeditor/codeeditor.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { TestConfigActivityComponent } from './components/test-config-activity/test-config-activity.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ConfigActivityComponent,\n    AnalyticsActivityComponent,\n    CeaComponent,\n    CodeeditorComponent,\n    PageNotFoundComponent,\n    TestConfigActivityComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CodemirrorModule,\n    NgbModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-analytics-activity',\n  templateUrl: './analytics-activity.component.html',\n  styleUrls: ['./analytics-activity.component.css']\n})\nexport class AnalyticsActivityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>analytics-activity works!</p>\n","import {Component, OnInit, QueryList, ViewChild, ViewChildren} from '@angular/core';\nimport {ActivityInstance, Deliverable, UnitTestResult} from \"../../models/activity-instance\";\nimport {ActivityService} from \"../../services/activity.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ActivityUnitTest, Code, Comment, LanguageEnum} from \"../../models/evaluation-activity\";\nimport {CodemirrorComponent} from \"@ctrl/ngx-codemirror\";\nimport {EndUserService} from \"../../services/end-user.service\";\n\n@Component({\n  selector: 'app-cea',\n  templateUrl: './cea.component.html',\n  styleUrls: ['./cea.component.css']\n})\nexport class CeaComponent implements OnInit {\n\n  public activityInstance!: ActivityInstance;\n  public deliverable!: Deliverable;\n  public passedTests: ActivityUnitTest[] = [];\n  public failedTests: any[] = [];\n  @ViewChild('codemirrorComponent') codemirrorComponent!: CodemirrorComponent;\n  @ViewChildren('codemirrorComponentOthers') codemirrorComponentOthers!: QueryList<CodemirrorComponent>;\n  ASSERT_FUNC = \"function assert(cond){ try{ if(!eval(cond)) { throw 'Assertion ' + cond + ' is FALSE'} } catch(e) { throw e; } }\";\n  codeOutput!: string;\n\n  constructor(private activityService: ActivityService,\n              private endUserService: EndUserService,\n              private route: ActivatedRoute) { }\n\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    const userId = this.route.snapshot.paramMap.get('userId');\n    if(id && userId) {\n      this.activityService.getActivityInstance(+id).subscribe(instance => {\n        if(!instance) {\n          alert(\"Esta atividade não está disponível.\");\n          return;\n        }\n\n        this.activityInstance = instance;\n        this.activityInstance.deliverable.forEach( del =>{\n            if(del.author && del.author.id == +userId) {\n              this.deliverable = del;\n              if(!this.deliverable.author.name) {\n                let authorName = null;\n                do {\n                  authorName = prompt('Qual o seu nome completo?');\n                } while(!authorName);\n                this.deliverable.author.name = authorName;\n                this.endUserService.saveEndUser(this.deliverable.author).subscribe( endUser => {\n                  console.log(endUser);\n                })\n              }\n            }\n        });\n      });\n    } else {\n      throw \"ID and UserID required\";\n    }\n  }\n\n  runTests(runOthers: boolean) {\n    if(!runOthers) {\n      this.passedTests = [];\n      this.failedTests = [];\n\n      this.deliverable.solution.testsToPass.forEach(test => {\n        this.runTest(test, this.deliverable.code, this.failedTests, this.passedTests);\n      });\n\n    } else {\n      this.activityInstance.deliverable.filter( d => d.id != this.deliverable.id).forEach( del => {\n        del.result = [];\n        del.solution.testsToPass.forEach( test => {\n\n          let failed: any[] = [], passed: any[] = [];\n          this.runTest(test, del.code, failed, passed);\n          if(failed.length > 0) {\n            let rest:UnitTestResult =  {\n              unitTest: test,\n              result: failed[0].error,\n              passed: false\n            };\n            del.result.push(rest);\n          }\n          if(passed.length > 0) {\n            let rest:UnitTestResult =  {\n              unitTest: test,\n              result: \"\",\n              passed: true\n            };\n            del.result.push(rest);\n          }\n        });\n      });\n    }\n  }\n\n  private checkTests(): number {\n    let failedTests: any = [], passedTests: any = [];\n    for(let i in this.deliverable.solution.testsToPass) {\n      const test = this.deliverable.solution.testsToPass[i];\n      this.runTest(test, this.deliverable.code, failedTests, passedTests);\n    }\n\n    this.deliverable.result = [];\n    failedTests.forEach( (t: {error: string, test: ActivityUnitTest}) => {\n      const testResult: UnitTestResult = {\n          result: t.error,\n          passed: false,\n          unitTest: t.test\n      };\n      this.deliverable.result.push(testResult);\n    });\n\n    passedTests.forEach( (t:ActivityUnitTest) => {\n      const testResult: UnitTestResult = {\n        result: '',\n        passed: true,\n        unitTest: t\n      };\n      this.deliverable.result.push(testResult);\n    });\n\n    return failedTests.length;\n  }\n\n  private runTest(test: ActivityUnitTest, code: Code, failedTests: any[], passedTests: any[]) {\n    switch (test.code.language) {\n      case LanguageEnum.JAVASCRIPT:\n        try {\n          eval(\"{\" + this.ASSERT_FUNC + code.code + \";\\r\\n\" + test.code.code + \"}\");\n          passedTests.push(test);\n        } catch (e: any) {\n          console.log(test);\n          failedTests.push({test: test, error: e});\n        }\n        break;\n      default:\n        alert(\"Language not supported: \" + test.code.language);\n    }\n\n    return failedTests.length == 0;\n  }\n\n  getOthersDeliverable() {\n    return this.activityInstance.deliverable.filter( (d: Deliverable) => d.id != this.deliverable.id);\n  }\n\n  // highlightLine(id?: number) {\n  //   let comment =  document.getElementById(\"comment_\" + id);\n  //   if(comment && comment.parentElement) {\n  //     setTimeout(() => {\n  //         // @ts-ignore\n  //       comment.parentElement.style.textDecoration = \"underline wavy white\";\n  //     }, 50);\n  //   }\n  // }\n  //\n  // removeHighlightLine(id?: number) {\n  //   let comment =  document.getElementById(\"comment_\" + id);\n  //   if(comment && comment.parentElement) {\n  //     setTimeout( () => {\n  //       if(comment && comment.parentElement)\n  //         comment.parentElement.style.textDecoration = \"none\";\n  //     }, 200);\n  //   }\n  // }\n\n  // buildComments(codemirrorComponent: CodemirrorComponent, deliverable: Deliverable): void {\n  //   let n = 0;\n  //   codemirrorComponent.codeMirror?.eachLine( (line: LineHandle) => {\n  //     if(line.text.indexOf('/**<comment>') >= 0) {\n  //       let p1: Position = {ch: line.text.indexOf('/**<comment>'), line: n};\n  //       let p2: Position = {ch: line.text.indexOf('**/', p1.ch)+3, line: n};\n  //\n  //       const elm = document.createElement(\"span\");\n  //\n  //       let opts: any = { readOnly: true, className: 'cea-comment', atomic: true, replacedWith: elm};\n  //       let commentId = +line.text.substring(p1.ch, p2.ch).replace(\"/**<comment>\", \"\").replace(\"</comment>**/\", \"\");\n  //       let comment = deliverable.code.commentList.find( c => c.id == commentId );\n  //       if(comment) {\n  //         elm.id = \"comment_\" + comment.id;\n  //         elm.className = \"btn btn-info cea-comment\";\n  //         elm.innerHTML = \"<span class='badge badge-light'>\" + comment.id +\"</span> Comentário de \" + comment.author.name + \"\";\n  //       }\n  //       codemirrorComponent.codeMirror?.markText(p1, p2, opts);\n  //     }\n  //     n++;\n  //   });\n  // }\n\n  run(deliverable: Deliverable) {\n    let output = '';\n\n    const consoleCode = '{\\n' +\n    '  const log = console.log.bind(console)\\n' +\n    '  console.log = (...args) => {\\n' +\n    \"    output += JSON.stringify(args) + '<br />';\\n\" +\n    '  }';\n\n    const consoleCodeEnd = 'console.log = log;';\n\n    const fullCode = consoleCode + '\\r\\n' + deliverable.code.code + consoleCodeEnd +'}';\n    console.log(fullCode);\n    eval(fullCode);\n\n    deliverable.output = output;\n  }\n\n  addComment(code: Code) {\n      let line = prompt('Linha: ');\n      line = line ? line : '1';\n      const commentText = prompt('Comentário: ');\n      if(commentText) {\n        const comment: Comment = {\n            id: undefined,\n            content: commentText,\n            date: new Date(),\n            author: this.deliverable.author,\n            replies: []\n        };\n\n        this.activityService.addComment(code, comment, +line, this.deliverable.author.id).subscribe( code => {\n            code.code = code.code;\n            code.commentList = code.commentList;\n        });\n      }\n  }\n\n  get currentUser() {\n    return this.deliverable.author;\n  }\n\n  codeChangeEvent(code: Code) {\n    this.deliverable.code.code = code.code;\n  }\n\n  replyCommentEvent($event: any) {\n    //console.log('replyComment', $event);\n  }\n\n  submit() {\n    let submitFlag = true;\n    let failedTestsCount = this.checkTests();\n    if(failedTestsCount > 0) {\n      submitFlag = confirm(`Existem ${failedTestsCount} testes que estão a falhar. Tem a certeza que quer submeter?`);\n    }\n    if(submitFlag) {\n      if(confirm('Após a submissão não poderá alterar o código que escreveu. No entanto poderá fazer comentários no seu código ou nos códigos dos seus colegas. Tem a certeza que quer continuar?')) {\n        this.activityService.submit(this.deliverable).subscribe( del => {\n          this.deliverable = del;\n        });\n      }\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col\">\n    <div *ngIf=\"activityInstance && deliverable\">\n\n      <div class=\"jumbotron\">\n        <h1 class=\"display-4\">{{activityInstance.activity.name}}</h1>\n        <p class=\"lead\">Olá {{deliverable.author.name}}!</p>\n        <p class=\"lead\"> {{activityInstance.activity.description}}</p>\n        <hr class=\"my-4\">\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col\">\n\n          <app-codeeditor [code]=\"deliverable.code\"\n                          [commentList]=\"deliverable.code.commentList\"\n                          [output]=\"deliverable.output\"\n                          [readOnly]=\"deliverable.submitted\"\n                          [currentUser]=\"currentUser\"\n                          (onCodeChange)=\"codeChangeEvent($event)\"\n                          (onReplyComment)=\"replyCommentEvent($event)\">\n          </app-codeeditor>\n          <br/>\n          <button class=\"btn btn-primary\" [disabled]=\"!deliverable.code.code\" (click)=\"runTests(false)\">Correr os meus\n            testes <span class=\"badge badge-light\">{{deliverable.solution.testsToPass.length}}</span></button>&nbsp;&nbsp;\n          <button class=\"btn btn-primary\" [disabled]=\"!deliverable.code.code\" (click)=\"runTests(true)\">Correr os testes\n            dos meus colegas <span class=\"badge badge-light\">{{activityInstance.deliverable.length - 1}}</span></button>&nbsp;&nbsp;\n          <button class=\"btn btn-info\" (click)=\"addComment(deliverable.code)\">Adicionar Comentário</button>&nbsp;&nbsp;\n          <button class=\"btn btn-primary\" (click)=\"run(deliverable)\">Executar</button>&nbsp;&nbsp;\n          <button class=\"btn btn-warning\" [disabled]=\"deliverable.submitted\" (click)=\"submit()\">{{deliverable.submitted ? 'Submetido!' : 'Submeter' }}</button>\n          <br/>\n          <br/>\n          <div *ngIf=\"failedTests.length > 0\">\n            <div *ngFor=\"let t of passedTests\">\n              <div class=\"alert alert-success\" role=\"alert\">\n                <b>Passou no teste {{t.id}}</b>\n              </div>\n            </div>\n            <div *ngFor=\"let t of failedTests\">\n              <div class=\"alert alert-danger\" role=\"alert\">\n                Falhou no teste ({{t.test.id}}) - causa: {{t.error}}\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"failedTests.length === 0 && passedTests.length > 0\" class=\"alert alert-success\" role=\"alert\">\n            <b>Passou em todos os testes!</b>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\" *ngFor=\"let othersDeliverable of getOthersDeliverable() \">\n        <div class=\"col\">\n          <p>Autor: {{othersDeliverable.author?.name ? othersDeliverable.author.name : '**desconhecido**'}}</p>\n          <app-codeeditor [code]=\"othersDeliverable.code\" [commentList]=\"othersDeliverable.code.commentList\" [readOnly]=\"true\" [output]=\"othersDeliverable.output\" [currentUser]=\"currentUser\">\n          </app-codeeditor>\n          <br/>\n          <button class=\"btn btn-info\" (click)=\"addComment(othersDeliverable.code)\">Adicionar Comentário</button>&nbsp;&nbsp;\n          <button class=\"btn btn-primary\" (click)=\"run(othersDeliverable)\">Executar</button>\n          <br/>\n          <br/>\n          <div *ngFor=\"let t of othersDeliverable.result\">\n            <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"t.passed\">\n              <b>Passou no teste {{t.unitTest.id}}</b>\n            </div>\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!t.passed\">\n              <b>Falhou no teste {{t.unitTest.id}}</b>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output, QueryList, ViewChild, ViewChildren} from '@angular/core';\nimport {Code, Comment, EndUser} from \"../../models/evaluation-activity\";\nimport {CodemirrorComponent} from \"@ctrl/ngx-codemirror\";\nimport {LineHandle, Position} from \"codemirror\";\nimport {CodeService} from \"../../services/code.service\";\nimport {ActivityService} from \"../../services/activity.service\";\n\n@Component({\n  selector: 'app-codeeditor',\n  templateUrl: './codeeditor.component.html',\n  styleUrls: ['./codeeditor.component.css']\n})\nexport class CodeeditorComponent implements OnInit {\n\n  @Input()\n  commentList: Comment[]  = [];\n  @Input()\n  currentUser!: EndUser;\n  @Input()\n  code!: Code;\n  @Input()\n  @Output()\n  output!: string;\n  @Input()\n  readOnly: boolean = false;\n  @Output()\n  onCodeChange = new EventEmitter();\n  @Output()\n  onReplyComment = new EventEmitter();\n\n  @ViewChild('codemirrorComponent') codemirrorComponent!: CodemirrorComponent;\n  @ViewChildren('codemirrorComponentOthers') codemirrorComponentOthers!: QueryList<CodemirrorComponent>;\n\n\n  constructor(private codeService: CodeService, private activityService: ActivityService) { }\n\n  ngOnInit(): void {\n    setTimeout(() => this.buildComments()  , 100);\n    if(this.readOnly === true) {\n      setInterval(() => this.refreshCode(), 30000);\n    }\n  }\n\n  highlightLine(id?: number) {\n    let comment =  document.getElementById(\"comment_\" + id);\n    if(comment && comment.parentElement && comment.parentElement.parentElement && comment.parentElement.parentElement.parentElement && comment.parentElement.parentElement.parentElement.parentElement) {\n      setTimeout(() => {\n        if(comment && comment.parentElement && comment.parentElement.parentElement && comment.parentElement.parentElement.parentElement && comment.parentElement.parentElement.parentElement.parentElement) {\n          comment.parentElement.parentElement.parentElement.parentElement.style.textDecoration = \"underline wavy white\";\n        }\n      }, 50);\n    }\n  }\n\n  removeHighlightLine(id?: number) {\n    let comment =  document.getElementById(\"comment_\" + id);\n    if(comment && comment.parentElement && comment.parentElement.parentElement && comment.parentElement.parentElement.parentElement && comment.parentElement.parentElement.parentElement.parentElement) {\n      setTimeout( () => {\n        if(comment && comment.parentElement && comment.parentElement.parentElement && comment.parentElement.parentElement.parentElement && comment.parentElement.parentElement.parentElement.parentElement)\n          comment.parentElement.parentElement.parentElement.parentElement.style.textDecoration = \"none\";\n      }, 200);\n    }\n  }\n\n  codeChanged() {\n    setTimeout( () => {\n      this.codeService.saveCode(this.code).subscribe(c => {\n        this.code = c;\n        this.onCodeChange && this.onCodeChange.emit(c);\n      });\n    }, 500);\n  }\n\n  refreshCode() {\n    this.codeService.getCode(this.code.id).subscribe( code => {\n      this.code.code = code.code;\n      this.buildComments();\n    });\n  }\n\n  buildComments(): void {\n    console.log(this.commentList);\n    let n = 0;\n    this.codemirrorComponent.codeMirror?.eachLine((line: LineHandle) => {\n\n      console.log(line.text);\n\n      if (line.text.indexOf('/**<comment>') >= 0) {\n        let p1: Position = {ch: line.text.indexOf('/**<comment>'), line: n};\n        let p2: Position = {ch: line.text.indexOf('**/', p1.ch) + 3, line: n};\n\n        const elm = document.createElement(\"span\");\n\n        let opts: any = {readOnly: true, className: 'cea-comment', atomic: true, replacedWith: elm};\n        let commentId = +line.text.substring(p1.ch, p2.ch).replace(\"/**<comment>\", \"\").replace(\"</comment>**/\", \"\");\n        console.log('commentId', commentId);\n        const comment = this.commentList.find(c => c.id == commentId);\n        if (comment) {\n          elm.id = \"comment_\" + comment.id;\n          elm.className = \"btn btn-info cea-comment\";\n          elm.innerHTML = \"<span class='badge badge-light'>\" + comment.id + \"</span> Comentário de \" + comment.author.name + \"\";\n          elm.addEventListener('click', () =>{\n            alert('Comentário: ' + comment.content);\n          });\n        }\n        console.log(comment);\n        this.codemirrorComponent.codeMirror?.markText(p1, p2, opts);\n      }\n      n++;\n    });\n  }\n\n  reply(comment: Comment) {\n      const commentText = prompt('Comentário: ');\n      if(commentText) {\n        this.activityService.replyComment(comment, commentText, this.currentUser).subscribe( c => {\n            comment.replies.push(c);\n            this.onReplyComment && this.onReplyComment.emit(c);\n        });\n      }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col\" #codeeditor>\n    <ngx-codemirror\n      #codemirrorComponent\n      (ngModelChange)=\"codeChanged()\"\n      [(ngModel)]=\"code.code\"\n      [options]=\"{\n                  lineNumbers: true,\n                  theme: 'material',\n                  readOnly: readOnly,\n                  mode: 'javascript'\n                }\"\n    ></ngx-codemirror>\n  </div>\n  <div class=\"col\">\n    <h5>Resultado</h5>\n    <div [innerHTML]=\"output\" style=\"border: 1px solid rgba(0,0,0,.125); width: 100%; height: 200px; padding: 10px; overflow-y: scroll;\">\n    &nbsp;\n    </div>\n    <h5>Comentários</h5>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\" *ngFor=\"let comment of commentList\"\n          (mouseover)=\"highlightLine(comment.id)\" (mouseout)=\"removeHighlightLine(comment.id)\">\n        <span class='badge badge-info'>{{comment.id}}</span>&nbsp;&nbsp;<b>{{comment.author.name}}</b> <span\n        class=\"badge badge-light\">({{comment.date | date:'short'}})</span>: {{comment.content}} <button class=\"btn btn-primary\" (click)=\"reply(comment)\">Reply</button>\n        <ul class=\"list-group\" style=\"margin-top: 10px;\">\n          <li class=\"list-group-item\" *ngFor=\"let c1 of comment.replies\"\n              (mouseover)=\"highlightLine(c1.id)\" (mouseout)=\"removeHighlightLine(c1.id)\">\n            <span class='badge badge-info'>{{c1.id}}</span>&nbsp;&nbsp;<b>{{c1.author.name}}</b> <span\n            class=\"badge badge-light\">({{c1.date | date:'short'}})</span>: {{c1.content}}\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivityService} from \"../../services/activity.service\";\nimport {\n  Activity,\n  ActivityUnitTest,\n  BibliographicReference,\n  LanguageEnum,\n  Solution\n} from \"../../models/evaluation-activity\";\nimport {FormControl} from \"@angular/forms\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-config-activity',\n  templateUrl: './config-activity.component.html',\n  styleUrls: ['./config-activity.component.css']\n})\nexport class ConfigActivityComponent implements OnInit {\n\n  private activity!: Activity;\n  name = new FormControl('');\n  description = new FormControl('');\n  solutions: Solution[] = [];\n  id = 0;\n  step = 1;\n  selectedSolution = new FormControl('');\n  bibliographicReferenceList: BibliographicReference[] = [];\n  activityTests: ActivityUnitTest[] = [];\n  nameBr = new FormControl('');\n  urlBr = new FormControl('');\n  error: any = null;\n  ASSERT_FUNC = \"function assert(cond){ try{ if(!eval(cond)) { throw 'Assertion ' + cond + ' is FALSE'} } catch(e) { throw e; } }\";\n\n  constructor(private activityService: ActivityService, private modalService: NgbModal, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n      this.activity = this.activityService.getActivity();\n      this.patchValues();\n  }\n\n  saveActivity() {\n    this.mergeValues();\n    console.log(JSON.stringify(this.activityService.getActivity()));\n  }\n\n  private mergeValues() {\n\n    this.activity = {\n        name: this.name.value,\n        activityUnitTestList: this.activityTests,\n        description: this.description.value,\n        solution: this.solutions,\n        bibliographicReferenceList: this.bibliographicReferenceList\n    }\n\n    this.activityService.saveActivity(this.activity);\n  }\n\n  private patchValues() {\n    this.name.setValue(this.activity.name);\n    this.description.setValue(this.activity.description);\n    this.activityTests = this.activity.activityUnitTestList;\n    this.solutions = this.activity.solution;\n    this.bibliographicReferenceList = this.activity.bibliographicReferenceList;\n  }\n\n  addSolution() {\n\n    const solution: Solution = {\n      testsToPass: [],\n      code: {code: '', commentList: [], language: LanguageEnum.JAVASCRIPT}\n    };\n\n    this.solutions.push(solution);\n  }\n\n  codeChanged() {\n\n  }\n\n  nextStep() {\n    this.saveActivity();\n    this.step = this.step > 3 ? 4: this.step + 1;\n  }\n\n  previousStep() {\n    this.saveActivity();\n    this.step = this.step > 1 ? this.step - 1 : 1;\n  }\n\n  addSolutionTest() {\n    const test: ActivityUnitTest = {\n      code: {code: '', language: LanguageEnum.JAVASCRIPT, commentList: []},\n      expectedResult: '',\n      score: 0,\n      performance: false,\n      passed: undefined,\n      message: '',\n      global: false\n    };\n\n    if (!this.selectedSolution.value.testsToPass) {\n      this.selectedSolution.value.testsToPass = [];\n    }\n\n    this.selectedSolution.value.testsToPass.push(test);\n  }\n\n  addGlobalTest() {\n    const test: ActivityUnitTest = {\n      id: undefined,\n      code: {code: '', language: LanguageEnum.JAVASCRIPT, commentList: []},\n      expectedResult: '',\n      score: 0,\n      performance: false,\n      passed: undefined,\n      message: '',\n      global: true\n    };\n\n    this.activityTests.push(test);\n  }\n\n  validate(test: ActivityUnitTest) {\n    const timeCodeStart = test.performance ? \"const startTime = new Date();\\r\\n\" : \"\";\n    const endTime = test.performance ? \"const RUN_TIME = (new Date()) - startTime; console.log(RUN_TIME);\\r\\n\" :\"\";\n    try {\n      eval(timeCodeStart + this.selectedSolution.value.code.code + endTime + '\\r\\n{' + this.ASSERT_FUNC + ';\\r\\n' + test.code.code + '}');\n      test.passed = true;\n    } catch (e: any) {\n      console.error(e);\n      test.passed = false;\n      test.message = e.toString();\n    }\n  }\n\n  validateGlobalTest(test: ActivityUnitTest) {\n    const c = this.solutions.map(s => s.code.code).reduce((s1, s2) => s1 + \";\" + s2 + \";\");\n    try {\n      eval(c + '\\r\\n{' + this.ASSERT_FUNC + ';\\r\\n' + test.code.code + '}');\n      test.passed = true;\n    } catch (e: any) {\n      console.error(e);\n      test.passed = false;\n      test.message = e.toString();\n    }\n  }\n\n  addOrEditBr(content: any, element?: BibliographicReference) {\n\n    if (element) {\n      this.nameBr.setValue(element.name);\n      this.urlBr.setValue(element.url);\n    }\n\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n\n      const ref: BibliographicReference = {\n        id: element ? element.id : undefined,\n        name: this.nameBr.value,\n        url: this.urlBr.value\n      };\n\n      if (!element) {\n        this.bibliographicReferenceList.push(ref);\n      }\n\n      this.nameBr.setValue('');\n      this.urlBr.setValue('');\n\n    }, (reason) => {\n      this.nameBr.setValue('');\n      this.urlBr.setValue('');\n    });\n  }\n\n  getTests(): ActivityUnitTest[] {\n    const tests = [];\n    if (this.selectedSolution.value.testsToPass) {\n      tests.push(this.selectedSolution.value.testsToPass);\n    }\n    if (this.activityTests) {\n      tests.push(this.activityTests);\n    }\n    return tests;\n  }\n\n  validateEntity() {\n\n    this.activityService.saveActivity(this.activity);\n\n    this.activityService.validate(this.activity).subscribe( activity => {\n      this.error = null;\n    }, error => {\n      this.error = error  && error.error && Array.isArray(error.error) ? error : null;\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col\">\n\n\n    <div class=\"jumbotron\">\n      <h1 class=\"display-4\">Atividade de Avaliação Colaborativa</h1>\n      <p class=\"lead\">Olá!</p>\n      <p class=\"lead\">Configuração da atividade</p>\n      <hr class=\"my-4\">\n      <p>Siga os passos do wizard para configurar a atividade.</p>\n    </div>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col\">\n    <div class=\"alert alert-danger\" *ngIf=\"error\">\n      <ul>\n        <li *ngFor=\"let e of error.error \">\n          {{e.error}}\n        </li>\n      </ul>\n\n    </div>\n    <form>\n      <div id=\"step1\" *ngIf=\"step === 1\">\n        <h2>Passo 1 de 4</h2>\n        <div class=\"form-group\">\n          <label>Nome da Atividade</label>\n          <input [formControl]=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Escreva aqui o nome da atividade\" name=\"name\">\n          <small class=\"form-text text-muted\">Nome da atividade de avaliação colaborativa.</small>\n        </div>\n        <div class=\"form-group\">\n          <label>Descrição</label>\n          <textarea [formControl]=\"description\" type=\"text\" class=\"form-control\" name=\"description\">\n\n        </textarea>\n          <small class=\"form-text text-muted\">Descreva o problema a ser resolvido pelos utilizadores. Defina com o\n            máximo de detalhe possível.</small>\n        </div>\n\n      </div>\n\n\n      <div id=\"step2\" *ngIf=\"step === 2\">\n        <h2>Passo 2 de 4</h2>\n        <button type=\"button\" class=\"btn btn-info\" (click)=\"addSolution()\">+ Adicionar Solução</button>\n        <br style=\"clear: both\"/>\n        <br style=\"clear: both\"/>\n\n        <div *ngFor=\"let solution of solutions\">\n\n          <div class=\"row\">\n            <div class=\"col\" #codeeditor>\n              <ngx-codemirror\n                #codemirrorComponent\n                (ngModelChange)=\"codeChanged()\"\n                [(ngModel)]=\"solution.code.code\"\n                [ngModelOptions]=\"{standalone: true}\"\n                [options]=\"{\n                      lineNumbers: true,\n                      theme: 'material',\n                      mode: 'javascript'\n                    }\"\n              ></ngx-codemirror>\n            </div>\n          </div>\n\n          <br style=\"clear: both\"/>\n\n        </div>\n      </div>\n\n      <div id=\"step3\" *ngIf=\"step === 3\">\n        <h2>Passo 3 de 4</h2>\n        <div class=\"row\">\n          <div class=\"col\">\n            <select class=\"form-control\" [formControl]=\"selectedSolution\">\n              <option *ngFor=\"let solution of solutions; let i = index;\" [ngValue]=\"solution\">Solução {{i + 1}}</option>\n            </select>\n            <br/>\n            <button type=\"button\" class=\"btn btn-info\" (click)=\"addSolutionTest()\">+ Adicionar Teste Específico</button>&nbsp;&nbsp;\n<!--            <button type=\"button\" class=\"btn btn-info\" (click)=\"addGlobalTest()\">+ Adicionar Teste Global</button>-->\n            <br/> <br/>\n            <div class=\"row\" *ngFor=\"let test of this.selectedSolution.value.testsToPass; let ti =  index;\">\n              <div class=\"col\">\n                <h3>Teste #{{ti + 1}} para a solução</h3>\n                <div class=\"row\">\n                  <div class=\"col-9\" #codeeditor>\n                    <ngx-codemirror\n                      #codemirrorComponent\n                      (ngModelChange)=\"codeChanged()\"\n                      [(ngModel)]=\"test.code.code\"\n                      [ngModelOptions]=\"{standalone: true}\"\n                      [options]=\"{\n                                  lineNumbers: true,\n                                  theme: 'material',\n                                  mode: 'javascript'\n                                }\"></ngx-codemirror>\n                    <br/>\n                    <button class=\"btn btn-secondary\" (click)=\"validate(test)\">Validar</button>\n                    <br/><br/>\n                    <div class=\"bi bi-check-circle alert alert-success\" role=\"alert\" *ngIf=\"test.passed === true\">\n                      Passou\n                    </div>\n\n                    <div class=\"bi bi-exclamation-triangle alert alert-danger\" role=\"alert\"\n                         *ngIf=\"test.passed === false\">\n                      Falhou: {{test.message}}\n                    </div>\n                  </div>\n                  <div class=\"col-3\">\n                    <br/>\n                    <div class=\"form-group\">\n                      <label class=\"form-check-label\">Peso na avaliação</label>\n                      <input type=\"range\" class=\"form-control-range\" [(ngModel)]=\"test.score\"\n                             [ngModelOptions]=\"{standalone: true}\">\n                      <b>{{test.score}}%</b>\n                    </div>\n                    <div class=\"form-group form-check\">\n                      <input type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"test.performance\"\n                             [ngModelOptions]=\"{standalone: true}\">\n                      <label class=\"form-check-label\">Este é um teste de Performance</label>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n            <div class=\"row\" *ngFor=\"let test of this.activityTests; let ti =  index;\">\n              <div class=\"col\">\n                <h3>Teste GLOBAL #{{ti + 1}}</h3>\n                <div class=\"row\">\n                  <div class=\"col-9\" #codeeditor>\n                    <ngx-codemirror\n                      #codemirrorComponent\n                      (ngModelChange)=\"codeChanged()\"\n                      [(ngModel)]=\"test.code.code\"\n                      [ngModelOptions]=\"{standalone: true}\"\n                      [options]=\"{\n                                  lineNumbers: true,\n                                  theme: 'material',\n                                  mode: 'javascript'\n                                }\"></ngx-codemirror>\n                    <br/>\n                    <button class=\"btn btn-secondary\" (click)=\"validateGlobalTest(test)\">Validar</button>\n                    <br/><br/>\n                    <div class=\"bi bi-check-circle alert alert-success\" role=\"alert\" *ngIf=\"test.passed === true\">\n                      Passou\n                    </div>\n\n                    <div class=\"bi bi-exclamation-triangle alert alert-danger\" role=\"alert\"\n                         *ngIf=\"test.passed === false\">\n                      Falhou: {{test.message}}\n                    </div>\n                  </div>\n                  <div class=\"col-3\">\n                    <br/>\n                    <div class=\"form-group\">\n                      <label class=\"form-check-label\">Peso na avaliação</label>\n                      <input type=\"range\" class=\"form-control-range\" [(ngModel)]=\"test.score\"\n                             [ngModelOptions]=\"{standalone: true}\">\n                      <b>{{test.score}}%</b>\n                    </div>\n                    <div class=\"form-group form-check\">\n                      <input type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"test.performance\"\n                             [ngModelOptions]=\"{standalone: true}\">\n                      <label class=\"form-check-label\">Este é um teste de Performance</label>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n      <div id=\"step4\" *ngIf=\"step === 4\" class=\"row\">\n\n        <div class=\"col\">\n          <h2>Passo 4 de 4</h2>\n          <br/>\n          <br/>\n          <button type=\"button\" class=\"btn btn-info\" (click)=\"addOrEditBr(content, undefined)\">Adicionar Referência\n            Bibliográfica\n          </button>\n          <br/>\n          <br/>\n\n          <ng-template #content let-modal>\n            <div class=\"modal-header\">\n              <h4 class=\"modal-title\" id=\"modal-basic-title\">Profile update</h4>\n              <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <form>\n                <div class=\"form-group\">\n                  <label for=\"name\">Nome da Referência</label>\n                  <input id=\"name\" class=\"form-control\" [formControl]=\"nameBr\" type=\"text\"\n                         placeholder=\"Nome da Referência\">\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"url\">Link</label>\n                  <input id=\"url\" class=\"form-control\" [formControl]=\"urlBr\" type=\"url\" placeholder=\"Link\">\n                </div>\n              </form>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Save</button>\n            </div>\n          </ng-template>\n\n          <table class=\"table table-striped\">\n            <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">URL</th>\n              <th scope=\"col\">&nbsp;</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let ref of bibliographicReferenceList; index as i\">\n              <th scope=\"row\">{{i + 1}}</th>\n              <td>\n                {{ref.name}}\n              </td>\n              <td><a [href]=\"ref.url\">{{ref.url}}</a></td>\n              <td>\n                <button class=\"btn btn-primary\" (click)=\"addOrEditBr(content, ref)\">Editar</button>\n                &nbsp;&nbsp;&nbsp;<button class=\"btn btn-danger\">Eliminar</button>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <br/><br/><br/>\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"step == 1\" (click)=\"previousStep()\">Anterior</button>&nbsp;&nbsp;\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"step == 4\" (click)=\"nextStep()\">Seguinte</button>&nbsp;&nbsp;\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"validateEntity()\">Validar</button>\n      <br/><br/><br/>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Page Not Found!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test-config-activity',\n  templateUrl: './test-config-activity.component.html',\n  styleUrls: ['./test-config-activity.component.css']\n})\nexport class TestConfigActivityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  save() {\n    const x:any = document.getElementsByTagName(\"iframe\");\n    console.log(x);\n  }\n}\n","<iframe src=\"http://localhost/v1/api/config\" width=\"100%\" height=\"900\"></iframe>\n<button class=\"btn btn-primary\" (click)=\"save()\">Save</button>\n","export interface Activity {\n  id?: number;\n  name: string;\n  description: string;\n  activityUnitTestList: ActivityUnitTest[];\n  solution: Solution[];\n  bibliographicReferenceList: BibliographicReference[];\n}\n\nexport interface  Solution {\n  id?: number;\n  testsToPass: ActivityUnitTest[];\n  code: Code;\n}\n\nexport enum LanguageEnum {\n  JAVASCRIPT= <any>'JAVASCRIPT',  HTML = <any>'HTML'\n}\n\nexport interface Comment {\n  id?: number;\n  author: EndUser;\n  date: Date;\n  content: string;\n  replies: Comment[];\n}\n\nexport interface EndUser {\n  id: number;\n  name: string;\n}\n\nexport interface Code {\n  id?: number;\n  language: LanguageEnum;\n  code: string;\n  commentList: Comment[];\n  author?: EndUser;\n}\n\nexport interface ActivityUnitTest {\n  id?: number;\n  code: Code;\n  expectedResult: string;\n  performance: boolean;\n  score: number;\n  /*Additional transient fields*/\n  passed?: boolean;\n  message: string;\n  global: boolean;\n}\n\nexport interface BibliographicReference {\n  id?: number;\n  name: string;\n  url: string;\n}\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {ActivityInstance, Deliverable} from \"../models/activity-instance\";\nimport {Activity, Code, Comment, EndUser} from \"../models/evaluation-activity\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getActivityInstance(id: number): Observable<ActivityInstance> {\n    return this.http.get<ActivityInstance>(\n      `${environment.base}/v1/api/cea/${id}`\n    );\n  }\n\n   createInstance(id: number, userId: number): Observable<ActivityInstance> {\n    return this.http.get<ActivityInstance>(\n      `${environment.base}/v1/api/cea/${id}/${userId}`\n    );\n  }\n\n  saveActivity(activity: Activity) {\n    const w:any = window;\n    w.activityName = activity.name;\n    w.activityUnitTestList = activity.activityUnitTestList;\n    w.description = activity.description;\n    w.solutions = activity.solution;\n    w.bibliographicReferenceList = activity.bibliographicReferenceList;\n  }\n\n\n  getActivity(): Activity {\n    const w:any = window;\n    const activity: Activity = {\n      name: w.activityName ? w.activityName : null,\n      activityUnitTestList: w.activityUnitTestList ? w.activityUnitTestList : [],\n      description: w.description ? w.description : null,\n      solution: w.solutions ? w.solutions : [],\n      bibliographicReferenceList: w.bibliographicReferenceList ? w.bibliographicReferenceList : []\n    }\n   return activity;\n  }\n\n  validate(activity: Activity) {\n    return this.http.post<Activity>(\n      `${environment.base}/v1/api/activity/validate`,\n      activity\n    );\n  }\n\n  addComment(code: Code, comment: Comment, line: number, userId: number) {\n    return this.http.post<Code>(\n      `${environment.base}/v1/api/code/${code.id}/user/${userId}/comment/${line}`,\n      comment\n    );\n  }\n\n  replyComment(comment: Comment, commentText: string, currentUser: EndUser) : Observable<Comment> {\n    return this.http.post<Comment>(\n      `${environment.base}/v1/api/comment/${comment.id}/user/${currentUser.id}/reply`,\n      {content: commentText}\n    );\n\n  }\n\n  submit(deliverable: Deliverable) : Observable<Deliverable> {\n    return this.http.post<Deliverable>(\n      `${environment.base}/v1/api/deliverable/submit`,\n      deliverable\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Activity, Code} from \"../models/evaluation-activity\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CodeService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  saveCode(code: Code) {\n    return this.http.post<Code>(\n      `${environment.base}/v1/api/code/`,\n      code\n    );\n  }\n\n  getCode(id?: number) {\n    return this.http.get<Code>(\n      `http://localhost/v1/api/code/${id}`\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Code, EndUser} from \"../models/evaluation-activity\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EndUserService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  saveEndUser(endUser: EndUser) {\n    console.log('Save user', endUser);\n    return this.http.post<EndUser>(\n      `${environment.base}/v1/api/user/`,\n      endUser\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  base: 'http://localhost'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}